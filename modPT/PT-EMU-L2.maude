*** defines the PT-system semantics for the two-level approach for RwPT
*** 1st level: system (net) rewrites 
*** 2nd level: firing rule
in PT-NORM

mod PT-EMU-L2{X :: TRIV} is
 pr PT-NORM{X} .
 sort SystemL2 .
 op _._ : Net Pbag -> SystemL2 [ctor] .
 vars I O H M M' : Pbag . 
 vars N N' : Net .
 var L : X$Elt . *** tran. lab
 var T : Tmatrix .
 crl [firing] : (N ; L |-> T) . M => (N ; L |-> T) . normalize(M + O - I) if [I,O,H] := T /\ I =/= O /\ enabled(T, M)  [print "T = " L] .
 
   *** COMPLETARE -- CORREGGERE
  *** rule's translation as operator
  *** pr SET{Pbag{X}} .  
  *** var S : System . 
  *** op firing-op : System -> Set{Pbag{X}} [memo] .
  *** eq firing-op(S) = $firing-op(S, emptyPbag) .
  *** op $firing-op : System Set{Pbag{X}} -> Set{Pbag{X}} .
  *** ceq $firing-op(S, X) = $firing-op(S,  (XM  --> S' : R)  U X)  if (T ; N) M := S /\ enabled(T, M) /\ 
  ***        S' := (T ; N) firing(T, M)  /\ R := firingRate(T, M) /\  XM := {N} & {T} & {M} /\ (XM  --> S' : R) in X = false .
  *** optimization: subset of variables used in match
  *** XM := {T}  
  *** eq $firing-op(S, X) = X [owise] .
  

endm


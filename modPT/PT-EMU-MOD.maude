*** defines the PT-system semantics
in PT-NORM

mod PT-EMU-MOD{X :: TRIV} is
 inc PT-NORM{X} .
 *** pr SET{Pbag{X}} .  
 vars I O H M M' : Pbag . 
 vars N N' : Net .
 var T : Tran .
 *** ordinary firing rule
 ***crl [firing] : N M => N firing(T, M) if T ; N' := N  /\ enabled(T, M)  .
 *** including normalization
 crl [firing] : N M => N normalize(firing(T, M)) if T ; N' := N  /\ enabled(T, M)  .
 
 *** includes a further optimization: if the marked places are retained then index abstraction is skipped
 *** crl [cfiring] : N M => N normalize(M', support(M) == support(M')) if T ; N' := N /\ enabled(T, M) /\ M' := firing(T, M)  .
  
  *** rule's translation as operator
  *** var S : System . 
  *** op firing-op : System -> Set{Pbag{X}} [memo] .
  *** eq firing-op(S) = $firing-op(S, emptyPbag) .
  *** op $firing-op : System Set{Pbag{X}} -> Set{Pbag{X}} .
  *** ceq $firing-op(S, X) = $firing-op(S,  (XM  --> S' : R)  U X)  if (T ; N) M := S /\ enabled(T, M) /\ 
  ***        S' := (T ; N) firing(T, M)  /\ R := firingRate(T, M) /\  XM := {N} & {T} & {M} /\ (XM  --> S' : R) in X = false .
  *** optimization: subset of variables used in match
  *** XM := {T}  
  *** eq $firing-op(S, X) = X [owise] .
  

endm


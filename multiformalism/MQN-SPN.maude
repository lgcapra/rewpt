*** An example of network of queues and SPN 
in SPN-NODE
in QUEUE-NODE

mod MQN-SPN is
  inc SPN-NODE-SYS{Nat} . 
  inc QUEUE-NODE-SYS{Nat}  .
  var K : NzNat . *** model parameter
  vars N N' N'' : Network .
  var S : Pbag .
  
  ops t0 t1 t2 t3 t4 t5 t6 : -> Tran .
  ops eq1 eq2 eq3 : -> ElQueue .
  eq eq1 = p(7) @ 1.0 . 
  eq eq2 = p(1) @ 1.5 . 
  eq eq3 = p(6) @ 2.5 . 
  ops q1 q2 q3 q23 : -> Queue  [memo] .
  eq  q1  = [1 . p(5), nilP] eq1 > p(0) .
  eq  q2  = [2 . p(2), nilP] eq2 > p(6) .
  eq  q3  = [2 . p(2), nilP] eq3 > p(0) .
  eq  q23 = [1 . p(2), nilP] ql(q2) ql(q3) > out(q3) . *** multi-class queue
  op network : -> Network .
  op netsys : NzNat -> NetSys .
  eq  t0 = t("start", 1.0, 1 ) |-> [1 . p(0), 1 . p(1), nilP] .
  eq  t1 = t("switch1", 0.5, 1 ) |-> [1 . p(3), 1 . p(2), nilP] .
  eq  t2 = t("switch2", 0.05, 1 ) |-> [1 . p(2), 1 . p(3), nilP] .
  eq  t3 = t("on", 2.0, 1 ) |-> [1 . p(4), 1 . p(5), nilP] .
  eq  t4 = t("off", 1.0, 1 ) |-> [1 . p(5), 1 . p(4), nilP] .
  eq  t5 = t("rem1", 1.0, 1 ) |-> [1 . p(1), 1 . p(7), nilP] .
  eq  t6 = t("rem6", 1.5, 1 ) |-> [1 . p(6), 1 . p(7), nilP] .
  op V : NzNat -> [Network] [memo] . *** variable component (depending on the marking of p2)
  eq V(2) = q2 , q3 , t5 , t6 . *** "out" of q2 is "in" for q3: sequential composition
  eq V(1) = q23 , t6 . *** multi-class queue
  eq V(0) = p(eq2) @ 0.0 p(eq3) @ 0.0 > out(q3) . *** "dead" queue
  eq network = t0 , t1 , t2 , t3 , t4 , t5 , t6 , q1 , V(2) .
  eq netsys(K) = network : K . p(0) + 2 . p(2) + 1 . p(5) .

  *** structural rewriting 
  crl [V2>V1] : N : S => N' , V(1) : S if S[p(2)] = 1 /\ N'' , N' := N /\ N'' = V(2) .
  crl [V2>V0] : N : S => N' , V(0) : S if S[p(2)] = 0 /\ N'' , N' := N /\ N'' = V(2) .
  crl [V1>V2] : N : S => N' , V(2) : S if S[p(2)] = 2 /\ N'' , N' := N /\ N'' = V(1) .
  crl [V1>V0] : N : S => N' , V(0) : S if S[p(2)] = 0 /\ N'' , N' := N /\ N'' = V(1) .
  crl [V0>V2] : N : S => N' , V(2) : S if S[p(2)] = 2 /\ N'' , N' := N /\ N'' = V(0) .
  
endm
in ../ALG-PN 
in NET-TOKEN

fmod SYNCH-EXE is
  pr NT-STRUCT{Ntlab} .
  pr BAG{String} * (op nil to nilS) .
  op synch : Net String -> Bag{String} .
  var N : Net . 
  var T : Tran .
  var L : Lab .
 ceq  synch((T ; N), "T1") = (if tag(l(T)) == "a" then 2 else 1 fi) . ch(T)  if ch(T) =/= "" .
  eq  synch(N, W:String) = nilS [owise] . *** just an example
endfm

*** view to a SYNCH-EXE
view Synch from SYNCH to SYNCH-EXE is 
endv

*** simple example of stochastic EHornets, all places hold stochastic wfn
mod EHORNET-EXE is
 inc EHORNET{Synch} .
 ops net net' net'' : -> Net  [memo] .
 ops m0 m0' m0'' : -> Pbag  [memo] .  
 ops nt nt' nt'' : -> NetToken [memo] .

 eq net =  t("a", "ch1", 1.0, 0) |-> [1 . p("in"), 1 . p("out"), nilP] .
 eq net' = t("b", "ch2", 2.0, 0) |-> [1 . p("x") + 1 . p("in"), 1 . p("out"), nilP] .
**** eq net'' = t("c", "", 2.0, 0) |-> [1 . p("in"), 1 . p("out"), nilP] .
 
 eq m0  =  1 . p("in") + 1 . p("out") .
 eq m0'  = 1 . p("in")  .
 eq m0'' = 1 . p("x") + 1 . p("in") .
 eq nt = net m0 nilP .
 eq nt' = net m0' .
 eq nt'' = net' m0'' .

 op init : -> Marking . *** system-net initial marking
 eq init = p("sys-1") |-> nt ; p("sys-2") |-> nt' ; p("sys-3") |-> nt'' ; p("sys-4") |-> emptyNT ;
           p("sys-5") |-> emptyNT ; p("sys-6") |-> emptyNT ; p("sys-7") |-> emptyNT .
 vars B B' B'' B1 B2 B3 B4 : Mset{NetToken} .
 vars X Y Z W N N' : Net .
 vars k k' : NzNat .
 vars M1 M2 M3 M4 : Mset{Pbag} .
  *** system net transitions (encoded as rules)
  *** pre(t1) = {p1,p2}, post{t1} = p3 ; removes one wfn from p1 and one from p2 and puts their alt in p2 (system autonomous) 
crl [T1] : p("sys-1") |-> (X M1) B ;  p("sys-2") |-> (X M2)  B' ; p("sys-3") |-> (Y M3) B'' ; p("sys-4") |-> B1 ; p("sys-5") |-> B2 ; p("sys-6") |-> B3 ; p("sys-7") |-> B4 
          =>  
            p("sys-1") |-> B ; p("sys-2") |-> B' ; p("sys-3") |-> B'' ; p("sys-4") |-> B1 (X M1) ; p("sys-5") |-> B2 (X M2) ; p("sys-6") |-> B3 (Y M3) ; p("sys-7") |-> B4 (Y M3)  
            if false .

crl [T1bis] : p("sys-1") |-> (X M1) B ;  p("sys-2") |-> (X M2)  B' ; p("sys-3") |-> (Y M3) B'' ; p("sys-4") |-> B1 ; p("sys-5") |-> B2 ; p("sys-6") |-> B3 ; p("sys-7") |-> B4 
          =>  
            p("sys-1") |-> B ; p("sys-2") |-> B' ; p("sys-3") |-> B'' ; p("sys-4") |-> B1 (X M1) ; p("sys-5") |-> B2 (X M2) ; p("sys-6") |-> B3 (Y M3) ; p("sys-7") |-> B4 (Y M3)  
            if synch(X,"T1") == 2 . "ch1" .
   
endm
in ../ALG-PN 

*** simple example of stochastic EHornets, all places hold stochastic wfn
mod EHORNET-EXE is
  inc MARKING{Wfn} * (op nil to nilW ) .
  inc WFN-EXE . *** contains some pre-defined net tokens (hereinafter; wf, wf', wf'')
  op init : -> Marking . *** system-net initial marking
  eq init = p("1") |-> 1 . wf ; p("2") |-> 1 . wf' + 1 . wf'' ; p("3") |-> nilW ; p("4") |-> nilW .
  vars B B' B'' : Bag{Wfn} .
  vars X Y : Wfn .
  vars N N' : Net .
  vars k k' : NzNat .
  *** system net transitions (encoded as rules)
  *** pre(t1) = {p1,p2}, post{t1} = p3 ; removes one wfn from p1 and one from p2 and puts their alt in p2 (system autonomous) 
  rl [t1] : p("1") |-> k . X  + B ;  p("2") |-> k' . Y + B' ; p("3") |-> B''  =>  
            p("1") |-> sd(k,1) . X + B ; p("2") |-> sd(k',1) . Y + B' ; p("3") |-> B'' + 1 . alt(X, Y)  .
  
  *** synchronization tran.: like t1 but puts a seq of removed net-tokens in p3 if there are two object-net transitions that use the same channel    
  vars T T' : Tran .      
 crl [t2-synch] : p("1") |-> k . X  + B ;  p("2") |-> k' . Y + B' ; p("3") |-> B''  =>  
            p("1") |-> sd(k,1) . X + B ; p("2") |-> sd(k',1) . Y + B' ; p("3") |-> B'' + 1 . seq(n(X) firing(T,m(X)), n(Y) firing(T',m(Y)),"") 
            if  T ; N := n(X)  /\  T' ; N' := n(Y) /\ ch(T) = ch(T') /\ enabled(T,m(X)) /\ enabled(T',m(Y)) .

  *** simply moves a net-token from p2 to p4
  rl [t3] : p("2") |-> k . X  + B ;  p("4") |-> B'  =>  p("2") |-> sd(k,1) . X + B ; p("4") |-> B' + 1 . X .
  
endm
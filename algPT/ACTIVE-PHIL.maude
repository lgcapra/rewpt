in ../PT-EMU
in PHIL-TOKEN.maude

mod PHIL-NET is
  inc PT-EMU{String, String} .
  op phil-net : -> Net [memo] . *** alias
  op phil-m0 : -> Pbag .
  op phil-sys0 : -> System .
  eq phil-sys0 = phil-net phil-m0 .
  eq phil-net =  "th" |-> [1 . p("well-fed") + 1 . p("no-idea"), 1 . p("appetite") + 1 . p("early-idea")] ;
                 "th" |-> [1 . p("appetite") + 1 . p("early-idea"), 1 . p("hungry") + 1 . p("sketch")] ;
                 "th" |-> [1 . p("hungry") + 1 . p("sketch"), 1 . p("starving") + 1 . p("pre-print")] ;
                 "eat" |-> [1 . p("starving"), 1 . p("re-freshed")] ;
                 "th" |-> [1 . p("pre-print") + 1 . p("re-freshed"), 1 . p("well-fed") + 1 . p("no-idea")] .
  eq phil-m0 = 1 . p("well-fed") + 1 . p("no-idea") . 
endm

view PhilNet from PH-STATE to PHIL-NET is
  sort Elt to System .
  op hungry(S:Elt) to term marking(S:System)[p("eat")] > 0 .
endv

mod ACTIVE-PHIL is
  inc DINING-PHIL-TK{PhilNet} . 
  op m0 : -> Marking [memo] . *** alias for initial configuration
  eq m0 =  p("Think") |-> nphiltk(phil-sys0, N) ; p("Fork") |-> nphil(N) ; p("Eat") |-> emptyPhilTk ; p("Pickup") |-> emptyPhilTk .
endm
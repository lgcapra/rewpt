in ../shared/BAG
in ../shared/MAP+
in ../PLACE

fmod BAG-NAT is
 pr BAG{Nat} * ( op nil to nilN) .
endfm

fmod BAG-STRING is
 pr BAG{String} * ( op nil to nilS) .
endfm

view BagNat from TRIV to BAG-NAT is 
 sort Elt to Bag{Nat} . 
endv

view BagString from TRIV to  BAG-STRING is 
 sort Elt to Bag{String} . 
endv

fmod MAPN is
 pr MAP{Place, BagNat} * ( op empty to emptyN, op undefined to undefinedN) .
endfm

fmod MAPS is
 pr MAP{Place, BagString} * ( op empty to emptyS, op undefined to undefinedS) .
endfm

fmod MAPs is 
 pr MAPS .
 pr MAPN .
 sort Net .
 subsort Map{Place, BagNat} Map{Place, BagString} < Net .
 op _;_ : Net Net -> Net [ctor assoc comm prec 121 format (d r os d)] .
  
endfm
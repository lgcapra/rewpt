in PAIR

fmod SORTED-PAIR{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} is 
 pr PAIR{STRICT-WEAK-ORDER,STRICT-WEAK-ORDER}{STRICT-TOTAL-ORDER, STRICT-TOTAL-ORDER}{X, Y} 
       * (sort Pair{STRICT-WEAK-ORDER,STRICT-WEAK-ORDER}{STRICT-TOTAL-ORDER, STRICT-TOTAL-ORDER}{X, Y} to Pair{X,Y}) . 
 pr EXT-BOOL .
 op _<_ : Pair{X, Y} Pair{X, Y} -> Bool . 
 vars A A’ : X$Elt . 
 vars B B’ : Y$Elt . 
 eq < A ; B > < < A’ ; B’ > = A < A’ or-else (A == A’ and-then B < B’) . 
endfm

view Pair<{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} from STRICT-TOTAL-ORDER to SORTED-PAIR{X,Y} is 
 sort Elt to Pair{X,Y} . 
endv

view Pair<1{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} from STRICT-TOTAL-ORDER to SORTED-PAIR{X,Y} is 
 sort Elt to Pair{X,Y} .
 vars X Y : Elt . 
 op X < Y to term 1st(X) < 1st(Y) . 
endv

view Pair<2{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} from STRICT-TOTAL-ORDER to SORTED-PAIR{X,Y} is 
 sort Elt to Pair{X,Y} .
 vars X Y : Elt . 
 op X < Y to term 2nd(X) < 2nd(Y) . 
endv
in PAIR

*** pairs of STRICT-TOTALLY ordered components 

fmod SORTED-PAIR{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} is 
 pr PAIR{STRICT-WEAK-ORDER,STRICT-WEAK-ORDER}{STRICT-TOTAL-ORDER, STRICT-TOTAL-ORDER}{X, Y} 
       * (sort Pair{STRICT-WEAK-ORDER,STRICT-WEAK-ORDER}{STRICT-TOTAL-ORDER, STRICT-TOTAL-ORDER}{X, Y} to Pair{X,Y}) . 
 pr EXT-BOOL .
 pr NAT .
 vars A A' : X$Elt . 
 vars B B' : Y$Elt . 
 vars P P' : Pair{X, Y} .
 
 op _<_  : Pair{X, Y} Pair{X, Y} -> Bool . *** strict total order
 eq P < P = false .
 eq < A ; B > < < A' ; B' > = A < A' or-else (A == A' and-then B < B') [owise] .
 
 op _<=_ : Pair{X, Y} Pair{X, Y} -> Bool . *** non-strict TO
 eq P <= P = true .
 eq P <= P' = P < P' [owise] .
 
 op min : Pair{X, Y} Pair{X, Y} -> Pair{X, Y} .
 eq min(P, P') = if P <= P' then P else P' fi .
endfm

*** ordinary view 
view SortedPair{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} from TRIV to SORTED-PAIR{X,Y} is 
 sort Elt to Pair{X,Y} .
endv

*** classical view as strict-total-order 
view SortedPair<{X :: STRICT-TOTAL-ORDER, Y :: STRICT-TOTAL-ORDER} from STRICT-TOTAL-ORDER to SORTED-PAIR{X,Y} is 
 sort Elt to Pair{X,Y} .
endv


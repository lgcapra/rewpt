in BAG
in SET+

*** this module relates bags and sets

fmod BAG-AND-SET{X :: TRIV} is
 protecting SET+{X} .
 protecting BAG{X} .
 vars K K' : NzNat . vars N N' : Nat . vars X X' : X$Elt .
 var B : Bag{X} . var NeB : NeBag{X} . vars S S' : Set{X} .
 *** support of a bag
 op support : Bag{X} -> Set{X}  .
 op support : NeBag{X} -> NeSet{X} .
 eq support(B) = $support(B, emptyS) .  
 op $support : Bag{X} Set{X} -> Set{X} . 
 eq $support(nil, S) = S . 
 eq $support(K . X + B, S) = $support(B, S U X) .
 *** create a bag out of a set
 op bagFromSet : NzNat Set{X} -> Bag{X} . *** tail recursive
 eq bagFromSet(K, S) = $bagFromSet(K, S, nil) .
 op $bagFromSet : NzNat Set{X} Bag{X} -> 
 Bag{X} .
 eq $bagFromSet(K, emptyS, B) = B .
 eq $bagFromSet(K, X U S, B) = $bagFromSet(K, S, K . X + B) .
endfm

*** parameterized trivial views to BAG-AND-SET{X}
view Bag{X :: TRIV} from TRIV to BAG-AND-SET{X} is 
 sort Elt to Bag{X} . 
endv

view Set{X :: TRIV} from TRIV to BAG-AND-SET{X} is 
 sort Elt to Set{X} . 
endv
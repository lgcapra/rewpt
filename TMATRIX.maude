in PBAG
in TRAN

fmod TMATRIX is
 pr PBAG .
 sort Tmatrix .
 op [_,_,_] : Pbag Pbag Pbag -> Tmatrix [ctor] .
 
 var P  : Place .
 vars I O H M I' O' H' : Pbag .
 vars K K' : NzNat .
 var Q  : Tmatrix .
  
 ops I O H : Tmatrix -> Pbag .
 eq I([I,O,H]) = I .
 eq O([I,O,H]) = O .
 eq H([I,O,H]) = H .

 op in :  Tmatrix Place -> Bool . *** test the existence of a place
 eq in([I + K . P, O, H], P) = true .
 eq in([I, O + K . P, H], P) = true .
 eq in([I, O, H + K . P], P) = true .
 eq in(Q, P) = false [owise] .

 op places : Tmatrix -> Pset .
 eq places([I,O,H]) = support(I) U support(O) U support(H) .

 op enabled : Tmatrix Pbag -> Bool .
 eq enabled([I,O,H], M) = I <= M and-then H > M .

 op dead : Tmatrix -> Bool .  *** checks for structurally dead transitions 
 eq dead([K . P + I, O, K' . P + H]) = K >= K' [metadata "dead tq"] .
 eq dead(Q) = false [owise] .

 *** pair-wise sum
 op _+_  : Tmatrix Tmatrix -> Tmatrix [prec 41 assoc comm] .
 eq [I,O,H] + [I',O',H'] = [I' + I, O' + O, H' + H] .

endfm

view Tmatrix from TRIV to TMATRIX is 
 sort Elt to Tmatrix . 
endv

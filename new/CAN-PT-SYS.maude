in PT-SYS+
in LAZYEVAL

view SetP0 from DEFAULT to PT-SYS is 
 sort Elt to SetP .
 op 0 to emptyP . 
endv

fmod CAN-PT-SYS is
 *** inc PT-SYS .
 pr PT-SYS .
 pr LAZYEVAL{SetP0} .
 vars Q Q' : Imatrix .
 vars S : String .
 vars I J : Nat .
 vars P P' : Place .
 var SYS SYS' : System .
 vars N N' : Net .
 vars M0 M0' : BagP .
 var SP SP' SX SY SZ : SetP .
 var NSP : NeSetP .

 op canonize : System -> System .
 eq canonize(SYS) = $canonize(SYS, places(SYS)) .
 op $canonize : System SetP -> System .
 eq $canonize(SYS, emptyP) = SYS .
 eq $canonize(SYS, (P, SP) ) = $canonize($canonize(SYS, P, SP), SP)  .
 op $canonize : System Place SetP -> System .
 eq $canonize(SYS, P, (P', NSP)) = $canonize($canonize(SYS, P, P'), P, NSP) . 
 eq $canonize(SYS, P, emptyP) = SYS . 
ceq $canonize(SYS, p(I,S), p(J,S)) = SYS' if  I =/= J /\ SYS' := swap(SYS, p(I,S) , p(J,S)) /\ SYS' < SYS .
  eq $canonize(SYS, P, P') = SYS [owise] .
 *** ceq t(I,S) |-> Q, t(J,S) |-> Q' = t(I,S) |-> Q', t(J,S) |-> Q if I < J /\ Q' < Q . *** preserves order

 op minArc : Net Atype -> BagP . *** returns the min "sum" of edges of a certain type
 var A : Atype .
 var T : Tran .
 eq minArc(emptyN, A) = nilP . 
 eq minArc((T |-> Q, N), A) = smin(Q(A), minArc(N, A)) . 
 
 op minLess : Net Place -> SetP . *** builds on the homonym op of BAGP
 eq minLess(N, P) = minLess(N, P, i) and-then minLess(N, P, o) and-then minLess(N, P, h) . 
 op minLess : Net Place Atype -> SetP . 
 eq minLess(N, P, A) =  minLess(minArc(N, A), P) .
endfm
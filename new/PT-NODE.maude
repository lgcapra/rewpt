fmod PT-NODE is
 protecting NAT .
 protecting EXT-BOOL .
 protecting STRING .
 sort Node .
 op n : Nat String -> Node [ctor] .
 vars N N' : Nat .
 vars L L' : String .
 vars N1 N2 : Node .
 
 op subscript : Node -> Nat .
 eq subscript (n(N,L)) = N .
 op label : Node -> String .
 eq label(n(N,L)) = L .

 op prefix : Node String -> Node .
 eq prefix(n(N,L), L') = n(N,L' + L) .  
 op suffix : Node String -> Node .
 eq suffix(n(N,L), L') = n(N,L + L') .  

 *** strict total order(s) -- collapse for equally-labelled nodes
 ops _<_  _<'_ : Node Node -> Bool . *** comparison first based on index than on label and vice-versa (originally deafult was the former)
 eq n(N,L) <' n(N',L') = N < N' or-else (N == N' and-then  L < L') .
 eq n(N,L) < n(N',L') =  L < L' or-else (L == L' and-then  N < N') .
 *** reflexive closure(s)
 ops _<=_  _<='_  : Node Node -> Bool .
 eq N1 <= N2 = N1 == N2 or-else N1 < N2 .
 eq N1 <=' N2 = N1 == N2 or-else N1 <' N2 .
endfm
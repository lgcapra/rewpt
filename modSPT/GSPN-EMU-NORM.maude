*** defines the GSPN normalized firing rule
in GSPN
in PT-NORM
in  STATE-TRAN-SYS

mod GSPN-EMU-NORM is
  pr STATE-TRAN-SYS .
  vars B B' : Pbag . 
  vars N N' : Net .
  var  T    : Tran .
  var  R    : RuleSet .
  var  FS   : Fset .
  var  RS   : Rset .
  var  Sys  : System .

*** symbolic firing rule
*** crl [firing] : N B => N normalize(firing(T, B)) if T ; N' := N  /\ hasConcession(T, B)  .
  *** with priorities
*** crl [firing] : N B => N normalize(firing(T, B)) if T ; N' := N  /\ enabled(T, N B) .
 
*** includes a further optimization: if the marked places are retained then index abstraction is skipped
*** crl [cfiring] : N B => N normalize(B', support(B) == support(B')) if T ; N' := N /\ hasConcession(T, B)  /\ B' := firing(T, B) .
 *** with priorities
*** crl [cfiring] : N B => N normalize(B', support(B) == support(B')) if T ; N' := N /\ enabled(T, N B)  /\ B' := firing(T, B) .

*** symbolic firing rule for state-transition representation of systems
rl [spn-firing] : NE: N M: B FIRING: (N' --> B', FS) REW: RS => toStateTranSPN((N ; N' ; net(FS)) B') .
*** rl [gspn-firing] : NE: N M: B FIRING: (N' --> B', FS) REW: RS => toStateTran((N ; N' ; net(FS)) B') .

*** other symbolic (structural) rewrites
rl [spn-rewrite] : NE: N M: B FIRING: FS REW: (RS , R ==> Sys)  => toStateTranSPN(Sys) .
*** rl [gspn-rewrite] : NE: N M: B FIRING: FS REW: (RS , R ==> Sys)  => toStateTranSPN(Sys) .
endm
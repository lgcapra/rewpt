*** defines the GSPN normalized firing rule
in GSPN
in PT-NORM
in  STATE-TRAN-SYS

mod GSPN-EMU-NORM is
  pr STATE-TRAN-SYS .
  vars I O H M M' : Pbag . 
  vars N N' : Net .
  vars L L' : Tlab . *** tran. lab
  var Q Q' : Tmatrix .
  vars T T' : Tran .
  var S : STset .
  *** symbolic firing rule (with priorities)
 *** crl [firing] : N M => N normalize(firing(T, M)) if T ; N' := N  /\ enabled(T, N M)  .
  *** without priorities
*** crl [firing] : N M => N normalize(firing(T, M)) if T ; N' := N  /\ hasConcession(T, M) .
 
*** includes a further optimization: if the marked places are retained then index abstraction is skipped
*** crl [cfiring] : N M => N normalize(M', support(M) == support(M')) if [I,O,H] |-> L ; N' := N /\ enabled([I,O,H], M) /\ M' := M + O - I  .

*** alternative, using the enabled set (enabled should be used if priorities were present)
crl [firing] : N M => N normalize(firing(T, M)) if T ; N' := N /\ in(haveConcession(N M), T) .
 *** with priorities
*** crl [firing] : N M => N normalize(firing(T, M)) if T ; N' := N /\ in(enabled(N M), T) .

*** symbolic rule for state-transition representation of systems 
rl [spn-firing] : NE: N M: M ST: (N' --> M', S) => toStateTranSPN((N ; N' ; net(S)) M') .
*** rl [gspn-firing] : NE: N M: M ST: (N' --> M', S) => toStateTran(N ; N' ; net(S)) M') .
endm